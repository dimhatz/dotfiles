{
    "editor.fontFamily": "Source Code Pro Medium",
    "vim.easymotionMarkerFontFamily": "Source Code Pro Medium",
    "vim.useSystemClipboard": true,
    "vim.leader": "<space>",
    "vim.easymotion": true,
    "vim.easymotionKeys": "hklyuiopnmqwertzxcvbasdgjf;",
    // no need to explicitly handle keys, only use when needing to set to false to give the key back to vscode
    // "vim.handleKeys": {
    //     "<C-k>": true,
    //     "<C-j>": true,
    //     "<C-s>": true,
    //     "<C-[>": true,
    //     "<C-]>": true,
    //     "<C-pageup>": true,
    //     "<C-pagedown>": true
    // },
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            // surround with s instead of ys
            "before": [ "s" ],
            "after": [ "y", "s" ],
            "commands": []
        },
        {
            // workaround: I have mapped <C-s> to vim's <C-[> in keybindings.json,
            // vscodevim will not map <c-s> directly, because it does not listen for this key combination
            "before": [ "<C-[>"],
            "commands": ["extension.vim_escape", "workbench.action.files.save"]
        },
        {
            // use <leader> prefix instead of <leader><leader> for easymotion
            "before": [ "<leader>", "k"],
            "after": [ "<leader>", "<leader>", "k" ]
        },
        {
            // use <leader> prefix instead of <leader><leader> for easymotion
            "before": [ "<leader>", "j"],
            "after": [ "<leader>", "<leader>", "j" ]
        },
        {
            // use <leader> prefix instead of <leader><leader> for easymotion
            "before": [ "<leader>", "w"],
            "after": [ "<leader>", "<leader>", "w" ]
        },
        {
            // use <leader> prefix instead of <leader><leader> for easymotion
            "before": [ "<leader>", "e"],
            "after": [ "<leader>", "<leader>", "e" ]
        },
        {
            // use <leader> prefix instead of <leader><leader> for easymotion
            "before": [ "<leader>", "b"],
            "after": [ "<leader>", "<leader>", "b" ]
        },
        {
            // <c-v> to enter visual line
            // do not use map v <c-v> because the commands for visual will misbehave (like surrounding visual etc)
            "before": [ "c-v" ],
            "after": [ "V"]
        },
        {
            // this is the new visual block
            "before": [ "V" ],
            "after": [ "c-v"]
        },
        {
            // delete char into black hole
            "before": [ "x" ],
            "after": [ "\"", "_", "d", "l"]
        },
        {
            // delete till end of the line into black hole
            "before": [ "X" ],
            "after": [ "\"", "_", "D"]
        },
        {
            // esc in normal removes hlsearch
            "before": [ "<Esc>" ],
            "after": [ "<Esc>"],
            // do not add "extension.vim_escape" to commands, it will result in infinite loop (maybe this is the way recursive mapping is implemented...)
            "commands": [ ":noh"]
        },
        {
            // workaround for undo to not undo multiple steps etc, also will update the modified symbol on tab when undoing to last saved chage
            // todo: remove this when fixed: https://github.com/VSCodeVim/Vim/issues/2007
            "before": [ "u" ],
            "after": [],
            "commands": [
                {
                    "command": "undo",
                    "args": []
                }
            ]
        },
        {
            // workaround for undo to not undo multiple steps etc, also will update the modified symbol on tab when undoing to last saved chage
            // todo: remove this when fixed: https://github.com/VSCodeVim/Vim/issues/2007
            "before": [ "<C-r>" ],
            "after": [],
            "commands": [
                {
                    "command": "redo",
                    "args": []
                }
            ]
        },
        {
            // workaround to stop opening folds when stepping into them, this will also make j move between wrapped lines, insteaad of skipping
            // https://github.com/VSCodeVim/Vim/issues/1004
            "before": [ "j" ],
            "after": ["g", "j"],
            "commands": []
        },
        {
            // workaround analogous to j above
            "before": [ "k" ],
            "after": ["g", "k"],
            "commands": []
        },
        {
            // Y yanks till end of line
            "before": [ "Y" ],
            "after": ["y", "$"],
            "commands": []
        },
        {
            // <c-j> will show more screen downwards (scroll the screen upwards)
            "before": [ "c-j" ],
            "after": [ "c-e" ],
            "commands": []
        },
        {
            // <c-k> will show more screen upwards (scroll the screen downwards)
            "before": [ "c-k" ],
            "after": [ "c-y" ],
            "commands": []
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [ "p"],
            "after": [ "p", "g", "v", "y" ]
            // alternatively, the below works too, but results in needing 2 undo actions to undo
            // "after": [ "\"", "_", "d", "P" ]
        },
        {
            "before": [ "x" ],
            "after": [ "\"", "_", "d"]
        },
        {
            "before": [ "s" ],
            "after": ["S"]
        }
    ],
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            // workaround: I have mapped vscode's <C-s> to vim's <C-[> in keybindings.json,
            // vscodevim will not map <c-s> directly, because it does not listen for this key combination
            "before": [ "<C-[>"],
            "after": [ "<Esc>"],
            "commands": [":w"]
            // alternatively
            // "commands": ["workbench.action.files.save"]
            // not sure whether this makes any difference, but using :w just in case vim handles the actions queue so that there is no race condition
        }
    ],
    "workbench.startupEditor": "newUntitledFile",
    "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\cmd.exe",
	"mongo.shell.path": "c:\\mongodb-win32-x86_64-2012plus-4.2.0\\bin\\mongo.exe",
    "extensions.autoUpdate": false,
    "extensions.autoCheckUpdates": false,
    "update.mode": "manual",
    "vim.highlightedyank.enable": true,
    "vim.hlsearch": true,
    "vim.visualstar": true,
    "editor.cursorBlinking": "solid",
    "vim.easymotionMarkerWidthPerChar": 9,
    "vim.easymotionMarkerYOffset": 3,
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false
    // "vim.debug.loggingLevelForConsole": "debug"
}